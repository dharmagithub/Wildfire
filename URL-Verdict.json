{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "comments": "This playbook used to add verdict URL security policy rules",
    "author": "Ashok M C, WildFire"
  },
  "parameters": {
    "Playbook_Name": {
      "defaultValue": "Wildfire-URL-verdict",
      "type": "string",
      "metadata": {
        "description": "enter name of the Logic App/Playbook"
      }
    },
    "PaloAlto_PAN-OS_CustomConnector_Name": {
      "defaultValue": "PaloAltoConnector",
      "type": "String",
      "metadata": {
        "description": "Enter the connector name"
      }
    },
    "Wildfire_APIkey": {
      "type": "securestring",
      "defaultValue": "djfsdhkdsf2687947k",
      "metadata": {
        "description": "Enter the Wildfire colud APIkey"
      }
    },
    "Security_Poilcy_rule": {
      "type": "string",
      "defaultValue": "Acc security policy",
      "metadata": {
        "description": "Enter Security Policy rule name"
      }
    }

  },
  "variables": {
    "PaloaltoWFConnectionName": "[concat('PaloaltoWFConnector-',parameters('Playbook_Name'))]",
    "PaloaltoConnectionName": "[concat('PaloaltoConnector-',parameters('Playbook_Name'))]",
    "AzureSentinelConnectionName": "[concat('azuresentinel-',parameters('Playbook_Name'))]",
    "TeamsConnectionName": "[concat('teamsconnector-', parameters('Playbook_Name'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('PaloaltoWFConnectionName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "customParameterValues": {},
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/customApis/PaloaltoWFConnector')]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('PaloaltoConnectionName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "customParameterValues": {},
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/customApis/',parameters('PaloAlto_PAN-OS_CustomConnector_Name'))]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('AzureSentinelConnectionName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "customParameterValues": {},
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('TeamsConnectionName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "customParameterValues": {},
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/teams')]"
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "name": "[parameters('Playbook_Name')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('PaloaltoConnectionName'))]",
        "[resourceId('Microsoft.Web/connections', variables('PaloaltoWFConnectionName'))]"
      ],
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "staticResults": {
            "Entities_-_Get_URLs0": {
              "status": "Succeeded",
              "outputs": {
                "headers": {},
                "statusCode": "OK"
              }
            }
          },
          "triggers": {
            "When_Azure_Sentinel_incident_creation_rule_was_triggered": {
              "type": "ApiConnectionWebhook",
              "inputs": {
                "body": {
                  "callback_url": "@{listCallbackUrl()}"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "path": "/incident-creation"
              }
            }
          },
          "actions": {
            "Append_comments_to_an_consolidated_array": {
              "runAfter": {
                "Set_adaptive_card_body_in_array_variable_for_In-valid_verdict": [
                  "Succeeded"
                ]
              },
              "type": "AppendToArrayVariable",
              "inputs": {
                "name": "finalConsolidatedcomments",
                "value": "@variables('incidentComment')"
              },
              "description": "consolidate comments of each iteration to update to incident"
            },
            "Entities_-_Get_URLs": {
              "runAfter": {},
              "type": "ApiConnection",
              "inputs": {
                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/entities/url"
              },
              "runtimeConfiguration": {
                "staticResult": {
                  "staticResultOptions": "Disabled",
                  "name": "Entities_-_Get_URLs0"
                }
              }
            },
            "For_each_each_URL": {
              "foreach": "@body('Entities_-_Get_URLs')?['URLs']",
              "actions": {
                "Check_verdict_code_of_an_URL": {
                  "actions": {
                    "Add_comment_for_incident": {
                      "runAfter": {
                        "Create_HTML_table_for_valid_verdict": [
                          "Succeeded"
                        ]
                      },
                      "type": "SetVariable",
                      "inputs": {
                        "name": "incidentComment",
                        "value": "<b>Below table provides the list of Benign URL(s) that are associated with incident.</b>\n@{body('Create_HTML_table_for_valid_verdict')}"
                      }
                    },
                    "Create_HTML_table_for_valid_verdict": {
                      "runAfter": {},
                      "type": "Table",
                      "inputs": {
                        "columns": [
                          {
                            "header": "URL",
                            "value": "@body('Parse_verdict_JSON')?['get-verdict-info']?['url']"
                          },
                          {
                            "header": "Verdict",
                            "value": "@body('Parse_verdict_JSON')?['get-verdict-info']?['verdict']"
                          },
                          {
                            "header": "AnalysisTime",
                            "value": "@body('Parse_verdict_JSON')?['get-verdict-info']?['analysis_time']"
                          },
                          {
                            "header": "Valid",
                            "value": "@body('Parse_verdict_JSON')?['get-verdict-info']?['valid']"
                          }
                        ],
                        "format": "HTML",
                        "from": "@createArray(body('Parse_verdict_JSON'))"
                      }
                    },
                    "Set_adaptive_card_body_in_array_variable_for_valid_verdict": {
                      "runAfter": {
                        "Add_comment_for_incident": [
                          "Succeeded"
                        ]
                      },
                      "type": "SetVariable",
                      "inputs": {
                        "name": "InformativeAdaptiveCardBody",
                        "value": [
                          {
                            "size": "Large",
                            "text": "URL- Azure Sentinel",
                            "type": "TextBlock",
                            "weight": "Bolder",
                            "wrap": true
                          },
                          {
                            "text": "@{items('For_each_each_URL')?['Url']} is having valid verdict value. URL is not Blocked",
                            "type": "TextBlock",
                            "wrap": true
                          }
                        ]
                      },
                      "description": "Set adaptive card body in array variable for valid verdict"
                    },
                    "Update_incident": {
                      "runAfter": {
                        "Set_adaptive_card_body_in_array_variable_for_valid_verdict": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "classification": {
                            "ClassificationAndReason": "TruePositive - SuspiciousActivity"
                          },
                          "incidentArmId": "@triggerBody()?['object']?['id']",
                          "severity": "@triggerBody()?['object']?['properties']?['severity']",
                          "status": "Closed"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "put",
                        "path": "/Incidents"
                      }
                    }
                  },
                  "runAfter": {
                    "Parse_verdict_JSON": [
                      "Succeeded"
                    ]
                  },
                  "else": {
                    "actions": {
                      "Check_If_URL_should_block": {
                        "actions": {
                          "Add_address_objects_to_security_policy_rules": {
                            "runAfter": {
                              "Append__new_address_object_to_array_variable": [
                                "Succeeded"
                              ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                              "body": {
                                "entry": {
                                  "@@name": "@variables('securityPolicyRules')",
                                  "action": "allow",
                                  "application": {
                                    "member": "any"
                                  },
                                  "category": {
                                    "member": "any"
                                  },
                                  "destination": {
                                    "member": "@variables('distinationMembers')"
                                  },
                                  "from": {
                                    "member": "any"
                                  },
                                  "hip-profiles": {
                                    "member": "any"
                                  },
                                  "service": {
                                    "member": "any"
                                  },
                                  "source": {
                                    "member": "any"
                                  },
                                  "source-user": {
                                    "member": "any"
                                  },
                                  "to": {
                                    "member": "any"
                                  }
                                }
                              },
                              "host": {
                                "connection": {
                                  "name": "@parameters('$connections')['PaloAltoConnector']['connectionId']"
                                }
                              },
                              "method": "put",
                              "path": "/restapi/v10.0/Policies/SecurityRules",
                              "queries": {
                                "location": "vsys",
                                "name": "@variables('securityPolicyRules')",
                                "vsys": "vsys1"
                              }
                            },
                            "description": "Add address objects to security policy rules"
                          },
                          "Append__new_address_object_to_array_variable": {
                            "runAfter": {},
                            "type": "AppendToArrayVariable",
                            "inputs": {
                              "name": "distinationMembers",
                              "value": "@items('For_each_each_URL')?['Url']"
                            }
                          },
                          "Append_to_URL's_into_array_variable": {
                            "runAfter": {
                              "Add_address_objects_to_security_policy_rules": [
                                "Succeeded"
                              ]
                            },
                            "type": "AppendToArrayVariable",
                            "inputs": {
                              "name": "VerdictURLs",
                              "value": "@items('For_each_each_URL')?['Url']"
                            },
                            "description": "Append URL's into array"
                          }
                        },
                        "runAfter": {
                          "Check_If_the_address_object_is_already_exist": [
                            "Succeeded"
                          ]
                        },
                        "expression": {
                          "or": [
                            {
                              "equals": [
                                "@empty(body('Filter_address_object_array'))",
                                true
                              ]
                            },
                            {
                              "equals": [
                                "@empty(body('Filter_array_by_security_policy_member'))",
                                true
                              ]
                            }
                          ]
                        },
                        "type": "If",
                        "description": "Check if URL should be add to security policy rules"
                      },
                      "Check_If_the_address_object_is_already_exist": {
                        "actions": {
                          "Check_if_URL_is_a_part_of_security_rules": {
                            "actions": {
                              "Append_URLs_to_an_array_variable": {
                                "runAfter": {},
                                "type": "AppendToArrayVariable",
                                "inputs": {
                                  "name": "VerdictURLs",
                                  "value": "@body('Parse_verdict_JSON')?['get-verdict-info']?['url']"
                                },
                                "description": "Append URL's to existing address object"
                              }
                            },
                            "runAfter": {
                              "Filter_array_by_security_policy_member": [
                                "Succeeded"
                              ]
                            },
                            "expression": {
                              "and": [
                                {
                                  "greater": [
                                    "@length(body('Filter_array_by_security_policy_member'))",
                                    0
                                  ]
                                }
                              ]
                            },
                            "type": "If",
                            "description": "Check if security rules is applied to URL or not"
                          },
                          "Filter_array_by_security_policy_member": {
                            "runAfter": {},
                            "type": "Query",
                            "inputs": {
                              "from": "@body('Get_the_member_of_the_security_rules')?['result']?['entry']",
                              "where": "@contains(item()?['destination']?['member'], items('For_each_each_URL')?['Url'])"
                            },
                            "description": "Filter member of the destination which is having URL"
                          }
                        },
                        "runAfter": {
                          "Filter_address_object_array": [
                            "Succeeded"
                          ]
                        },
                        "else": {
                          "actions": {
                            "Create_an_address_object_to_add_for_Security_rules": {
                              "runAfter": {},
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "entry": {
                                    "@@name": "@items('For_each_each_URL')?['Url']",
                                    "description": "@items('For_each_each_URL')?['Url']",
                                    "fqdn": "@items('For_each_each_URL')?['Url']"
                                  }
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['PaloAltoConnector']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/restapi/v10.0/Objects/Addresses",
                                "queries": {
                                  "address type": "fqdn",
                                  "location": "vsys",
                                  "name": "@items('For_each_each_URL')?['Url']",
                                  "vsys": "vsys1"
                                }
                              },
                              "description": "Create an address object to provide apply security rule"
                            }
                          }
                        },
                        "expression": {
                          "and": [
                            {
                              "greater": [
                                "@length(body('Filter_address_object_array'))",
                                0
                              ]
                            }
                          ]
                        },
                        "type": "If",
                        "description": "Check address object is already exist for the URL"
                      },
                      "Filter_address_object_array": {
                        "runAfter": {
                          "Get_the_member_of_the_security_rules": [
                            "Succeeded"
                          ]
                        },
                        "type": "Query",
                        "inputs": {
                          "from": "@body('Get_list_address_objects_from_PAN_OS_VM')?['result']?['entry']",
                          "where": "@equals(item()?['@name'], items('For_each_each_URL')?['Url'])"
                        },
                        "description": "Filter address object array"
                      },
                      "Get_list_address_objects_from_PAN_OS_VM": {
                        "runAfter": {},
                        "type": "ApiConnection",
                        "inputs": {
                          "host": {
                            "connection": {
                              "name": "@parameters('$connections')['PaloAltoConnector']['connectionId']"
                            }
                          },
                          "method": "get",
                          "path": "/restapi/v10.0/Objects/Addresses",
                          "queries": {
                            "location": "vsys",
                            "vsys": "vsys1"
                          }
                        },
                        "description": "Get list of address object filtered by address object name"
                      },
                      "Get_the_member_of_the_security_rules": {
                        "runAfter": {
                          "Get_list_address_objects_from_PAN_OS_VM": [
                            "Succeeded"
                          ]
                        },
                        "type": "ApiConnection",
                        "inputs": {
                          "host": {
                            "connection": {
                              "name": "@parameters('$connections')['PaloAltoConnector']['connectionId']"
                            }
                          },
                          "method": "get",
                          "path": "/restapi/v10.0/Policies/SecurityRules",
                          "queries": {
                            "location": "vsys",
                            "name": "@variables('securityPolicyRules')",
                            "vsys": "vsys1"
                          }
                        },
                        "description": "Fetch the existing member of the security rules "
                      }
                    }
                  },
                  "expression": {
                    "and": [
                      {
                        "equals": [
                          "@int(body('Parse_verdict_JSON')?['get-verdict-info']?['verdict'])",
                          0
                        ]
                      }
                    ]
                  },
                  "type": "If",
                  "description": "Apply condition on verdict info of an URL"
                },
                "Contract_JSON_object_for_verdict": {
                  "runAfter": {
                    "Create_Verdict_for_url": [
                      "Succeeded"
                    ]
                  },
                  "type": "SetVariable",
                  "inputs": {
                    "name": "VerdictJSON",
                    "value": {
                      "get-verdict-info": {
                        "analysis_time": "@json(xml(body('Create_Verdict_for_url')))['wildfire']['get-verdict-info']['analysis_time']",
                        "url": "@json(xml(body('Create_Verdict_for_url')))['wildfire']['get-verdict-info']['url']",
                        "valid": "@json(xml(body('Create_Verdict_for_url')))['wildfire']['get-verdict-info']['valid']",
                        "verdict": "@json(xml(body('Create_Verdict_for_url')))['wildfire']['get-verdict-info']['verdict']"
                      }
                    }
                  },
                  "description": "Construct JSON object for XML"
                },
                "Create_Verdict_for_url": {
                  "runAfter": {},
                  "type": "ApiConnection",
                  "inputs": {
                    "body": {
                      "apikey": "@variables('apikey')",
                      "url": "@items('For_each_each_URL')?['Url']"
                    },
                    "headers": {
                      "Content-Type": "application/json"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['PaloaltoWFConnector']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/get/verdict"
                  },
                  "description": "Get Verdict info for the URL"
                },
                "Parse_verdict_JSON": {
                  "runAfter": {
                    "Contract_JSON_object_for_verdict": [
                      "Succeeded"
                    ]
                  },
                  "type": "ParseJson",
                  "inputs": {
                    "content": "@variables('VerdictJSON')",
                    "schema": {
                      "properties": {
                        "get-verdict-info": {
                          "properties": {
                            "analysis_time": {
                              "description": "Analysis time of the URL verdict",
                              "type": "string"
                            },
                            "url": {
                              "description": "URL for which verdict information genarated",
                              "type": "string"
                            },
                            "valid": {
                              "description": "Valid info of the URL verdict",
                              "type": "string"
                            },
                            "verdict": {
                              "description": "verdict code of the URL verdict",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              },
              "runAfter": {
                "Initialize_array_to_add_existing_member_of_the_security_policy_rules": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "For_each_incident_comment": {
              "foreach": "@variables('finalConsolidatedcomments')",
              "actions": {
                "Add_comment_to_incident_(V3)": {
                  "runAfter": {
                    "Add_icon_to_each_comments": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection",
                  "inputs": {
                    "body": {
                      "incidentArmId": "@triggerBody()?['object']?['id']",
                      "message": "<p><br>\n@{outputs('Add_icon_to_each_comments')}@{item()}</p>"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/Incidents/Comment"
                  }
                },
                "Add_icon_to_each_comments": {
                  "runAfter": {},
                  "type": "Compose",
                  "inputs": "<img src=\"https://pan.dev/img/PANW_Parent_Brand_Peelable_RGB_Red.svg\",alt=\"Lamp\" width=\"32\" height=\"32\" />",
                  "description": "Add icon to each comments"
                }
              },
              "runAfter": {
                "Post_adaptive_card_in_a_chat_or_channel": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Initialize_apikey_string_variable": {
              "runAfter": {
                "Entities_-_Get_URLs": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "apikey",
                    "type": "string",
                    "value": "[parameters('Wildfire_APIkey')]"
                  }
                ]
              },
              "description": "Variable to store the apikey globally"
            },
            "Initialize_array_to_add_existing_member_of_the_security_policy_rules": {
              "runAfter": {
                "Initialize_array_variable_for_verdict_URL_collections": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "distinationMembers",
                    "type": "array"
                  }
                ]
              }
            },
            "Initialize_array_variable_for_comment": {
              "runAfter": {
                "Initialize_object_variable_to_create_verdict_JSON": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "incidentComment",
                    "type": "string"
                  }
                ]
              },
              "description": "string variable to set the incident comment according to the condition"
            },
            "Initialize_array_variable_for_informative_adaptive_card_message": {
              "runAfter": {
                "Initialize_string_variable_for_predefined_security_policy_rules": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "InformativeAdaptiveCardBody",
                    "type": "array"
                  }
                ]
              },
              "description": "Array variable to defined adaptive card message"
            },
            "Initialize_array_variable_for_verdict_URL_collections": {
              "runAfter": {
                "Initialize_array_variable_to_append_comments": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "VerdictURLs",
                    "type": "array"
                  }
                ]
              },
              "description": "Invalid verdict array storage"
            },
            "Initialize_array_variable_to_append_comments": {
              "runAfter": {
                "Initialize_array_variable_for_informative_adaptive_card_message": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "finalConsolidatedcomments",
                    "type": "array"
                  }
                ]
              },
              "description": "Initialize array variable to append comments of each iteration "
            },
            "Initialize_object_variable_to_create_verdict_JSON": {
              "runAfter": {
                "Initialize_apikey_string_variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "VerdictJSON",
                    "type": "object"
                  }
                ]
              },
              "description": "store verdict JOSN object"
            },
            "Initialize_string_variable_for_predefined_security_policy_rules": {
              "runAfter": {
                "Initialize_array_variable_for_comment": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "securityPolicyRules",
                    "type": "string",
                    "value": "[parameters('Security_Poilcy_rule')]"
                  }
                ]
              },
              "description": "Initialize string variable for predefined security policy rules"
            },
            "Post_adaptive_card_in_a_chat_or_channel": {
              "runAfter": {
                "Append_comments_to_an_consolidated_array": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "body": {
                  "messageBody": "{\n    \"type\": \"AdaptiveCard\",\n    \"body\":  [\n     {\n    \"size\": \"Small\",\n    \"style\": \"Person\",\n    \"type\": \"Image\",\n    \"url\": \"https://avatars2.githubusercontent.com/u/4855743?s=280&v=4\"\n  },\n    {\n      \"type\":\"ColumnSet\",\n    \"columns\": [\n        {\n        \"type\":\"Column\",\n      \n        \"items\": @{variables('InformativeAdaptiveCardBody')},\n \"width\": \"auto\"\n        \n      }\n    ]\n}\n  ],\n    \"$schema\": \"http://adaptivecards.io/schemas/adaptive-card.json\",\n    \"version\": \"1.2\"\n}",
                  "recipient": {
                    "channelId": "19:7abc1180c1d84a3fba83770e34231132@thread.tacv2",
                    "groupId": "18de1100-ab2e-4505-be42-8263b915b221"
                  },
                  "subject": "Information Palo alto Wildfire -Azure sentinel"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['teams']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/v1.0/teams/conversation/adaptivecard/poster/@{encodeURIComponent('User')}/location/@{encodeURIComponent('Channel')}"
              }
            },
            "Select_all_Invalid_URL_verdicts": {
              "runAfter": {
                "check_invalid_verdict_array": [
                  "Succeeded"
                ]
              },
              "type": "Select",
              "inputs": {
                "from": "@variables('VerdictURLs')",
                "select": {
                  "text": "@item()",
                  "type": "TextBlock"
                }
              }
            },
            "Set_adaptive_card_body_in_array_variable_for_In-valid_verdict": {
              "runAfter": {
                "Select_all_Invalid_URL_verdicts": [
                  "Succeeded"
                ]
              },
              "type": "SetVariable",
              "inputs": {
                "name": "InformativeAdaptiveCardBody",
                "value": [
                  {
                    "size": "Large",
                    "text": "URL- Azure Sentinel",
                    "type": "TextBlock",
                    "weight": "Bolder",
                    "wrap": true
                  },
                  {
                    "size": "Large",
                    "text": "Below URL(s) are blocked",
                    "type": "TextBlock",
                    "weight": "Bolder",
                    "wrap": true
                  },
                  {
                    "columns": [
                      {
                        "items": "@body('Select_all_Invalid_URL_verdicts')",
                        "type": "Column",
                        "wrap": true
                      }
                    ],
                    "type": "ColumnSet"
                  },
                  {
                    "text": "are having invalid verdict value and its blocked",
                    "type": "TextBlock",
                    "wrap": true
                  }
                ]
              },
              "description": "Set adaptive card body in array variable for In-valid verdict"
            },
            "check_invalid_verdict_array": {
              "actions": {
                "Append_information_to_incident_comments": {
                  "runAfter": {
                    "construct_HTML_Table_for_invalid_verdict": [
                      "Succeeded"
                    ]
                  },
                  "type": "AppendToStringVariable",
                  "inputs": {
                    "name": "incidentComment",
                    "value": "<b>Below table provides the list of Malicious URL(s) that are associated with incident.</b>\n@{body('construct_HTML_Table_for_invalid_verdict')}"
                  },
                  "description": "Append  information to incident comments"
                },
                "construct_HTML_Table_for_invalid_verdict": {
                  "runAfter": {},
                  "type": "Table",
                  "inputs": {
                    "columns": [
                      {
                        "header": "Address_object",
                        "value": "@item()"
                      },
                      {
                        "header": "Secuirty_Policy",
                        "value": "@variables('securityPolicyRules')"
                      },
                      {
                        "header": "Comments",
                        "value": "Blocked"
                      }
                    ],
                    "format": "HTML",
                    "from": "@variables('VerdictURLs')"
                  },
                  "description": "construct HTML Table for invalid verdict"
                }
              },
              "runAfter": {
                "For_each_each_URL": [
                  "Succeeded"
                ]
              },
              "expression": {
                "and": [
                  {
                    "not": {
                      "equals": [
                        "@variables('VerdictURLs')",
                        "@null"
                      ]
                    }
                  }
                ]
              },
              "type": "If"
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "PaloAltoConnector": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('PaloAltoConnectionName'))]",
                "connectionName": "[variables('PaloAltoConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/customApis/',parameters('PaloAlto_PAN-OS_CustomConnector_Name'))]"
              },
              "PaloaltoWFConnector": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('PaloaltoWFConnectionName'))]",
                "connectionName": "[variables('PaloaltoWFConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/customApis/PaloaltoWFConnector')]"
              },
              "azuresentinel": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                "connectionName": "[variables('AzureSentinelConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
              },
              "teams": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]",
                "connectionName": "[variables('TeamsConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/teams')]"
              }
            }
          }
        }
      }
    }
  ]
}
