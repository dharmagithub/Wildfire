{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "comments": "This playbook used to enrich sentinel incident with device information",
    "author": "Ashok M C, WildFire"
  },
  "parameters": {
    "Playbook_Name": {
      "type": "string",
      "defaultValue": "Wildfire-filehash-enrichment",
      "metadata": {
        "description": "Name of the Logic App/Playbook"
      }

    },
    "IngrationAccount_Name": {
      "type": "string",
      "defaultValue": "IntegrationAccount",
      "metadata": {
        "description": "Name of the integartion Account"
      }
    },
    "WildFireAPIkey": {
      "type": "string",
      "defaultValue": "djfsdhkdsf2687947k",
      "metadata": {
        "description": "Wild fire colud APIkey"
      }
    }
  },
  "variables": {
    "AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('Playbook_Name'))]",
    "WildfireConnectorConnectionName": "[concat('WildfireConnector-', parameters('Playbook_Name'))]",
    "OutlookConnectionName": "[concat('msoffice-outlook-', parameters('Playbook_Name'))]"

  },
  "resources": [
    {
      "properties": {
        "state": "Enabled",
        "integrationAccount": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Logic/integrationAccounts/',parameters('IngrationAccount_Name'))]"
        },
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "When_Azure_Sentinel_incident_creation_rule_was_triggered": {
              "type": "ApiConnectionWebhook",
              "inputs": {
                "body": {
                  "callback_url": "@{listCallbackUrl()}"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "path": "/incident-creation"
              },
              "description": "Sentinel trigger"
            }
          },
          "actions": {
            "Entities_-_Get_FileHashes": {
              "runAfter": {},
              "type": "ApiConnection",
              "inputs": {
                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/entities/filehash"
              },
              "description": "File hash entities received form sentinel"
            },
            "For_each_comment_in_array": {
              "foreach": "@variables('finalconsoildatedcomments')",
              "actions": {
                "Add_comment_to_incident_(V3)_2": {
                  "runAfter": {},
                  "type": "ApiConnection",
                  "inputs": {
                    "body": {
                      "incidentArmId": "@triggerBody()?['object']?['id']",
                      "message": "<p>@{item()}</p>"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/Incidents/Comment"
                  }
                }
              },
              "runAfter": {
                "For_each_file_hash": [
                  "Succeeded"
                ]
              },
              "type": "Foreach",
              "description": "For each comment in array should update in the incident."
            },
            "For_each_file_hash": {
              "foreach": "@body('Entities_-_Get_FileHashes')?['Filehashes']",
              "actions": {
                "Append_to_array_variable_with_comment_of_each_iteration_": {
                  "runAfter": {
                    "Check_verdict_of_the_file_hash": [
                      "Succeeded"
                    ]
                  },
                  "type": "AppendToArrayVariable",
                  "inputs": {
                    "name": "finalconsoildatedcomments",
                    "value": "@variables('IncidentComment')"
                  },
                  "description": "Append to array variable with comment of each iteration "
                },
                "Check_verdict_of_the_file_hash": {
                  "actions": {
                    "Assign_result_to_valid_verdict_info_to_variable": {
                      "runAfter": {
                        "Create_HTML_for_the_file_hash_verdict": [
                          "Succeeded"
                        ]
                      },
                      "type": "SetVariable",
                      "inputs": {
                        "name": "IncidentComment",
                        "value": "@body('Create_HTML_for_the_file_hash_verdict')"
                      },
                      "description": "Assign result to valid verdict info to variable"
                    },
                    "Create_HTML_for_the_file_hash_verdict": {
                      "runAfter": {},
                      "type": "Table",
                      "inputs": {
                        "columns": [
                          {
                            "header": "sha256",
                            "value": "@item()?['sha256']"
                          },
                          {
                            "header": "verdict",
                            "value": "@item()?['verdict']"
                          },
                          {
                            "header": "md5",
                            "value": "@item()?['md5']"
                          }
                        ],
                        "format": "HTML",
                        "from": "@createArray(body('Parse_JSON_of_verdict'))"
                      },
                      "description": "Generate HTML for the file hash verdict  "
                    }
                  },
                  "runAfter": {
                    "Parse_JSON_of_verdict": [
                      "Succeeded"
                    ]
                  },
                  "else": {
                    "actions": {
                      "Assign_result_to_valid_report_info_to_variable": {
                        "runAfter": {
                          "Converting_XML_Report_to_HTML": [
                            "Succeeded"
                          ]
                        },
                        "type": "SetVariable",
                        "inputs": {
                          "name": "IncidentComment",
                          "value": "@{body('Converting_XML_Report_to_HTML')}"
                        }
                      },
                      "Converting_XML_Report_to_HTML": {
                        "runAfter": {
                          "_Generate_analysis_report_for_file_hash_in_XML_format": [
                            "Succeeded"
                          ]
                        },
                        "type": "Xslt",
                        "inputs": {
                          "content": "@{body('_Generate_analysis_report_for_file_hash_in_XML_format')}",
                          "integrationAccount": {
                            "map": {
                              "name": "reportxslt"
                            }
                          }
                        },
                        "description": "Convert XML format report into HTML and send to incident"
                      },
                      "Send_an_email_for_the_file_hash": {
                        "runAfter": {
                          "_Generate_analysis_report_for_file_hash_in_PDF_format": [
                            "Succeeded"
                          ]
                        },
                        "type": "ApiConnection",
                        "inputs": {
                          "body": {
                            "Attachments": [
                              {
                                "ContentBytes": "@{base64(body('_Generate_analysis_report_for_file_hash_in_PDF_format'))}",
                                "Name": ".@{items('For_each_file_hash')?['Value']}.pdf"
                              }
                            ],
                            "Body": "<p>Hi All,<br>\n<br>\nPlease find the attached document for the file hash report@{items('For_each_file_hash')?['Value']} .<br>\n<br>\nThank you,<br>\nWildfire Team</p>",
                            "Subject": "Do not reply : Report for the file hash @{items('For_each_file_hash')?['Value']}",
                            "To": "v-ashokmy@microsoft.com"
                          },
                          "host": {
                            "connection": {
                              "name": "@parameters('$connections')['office365']['connectionId']"
                            }
                          },
                          "method": "post",
                          "path": "/v2/Mail"
                        },
                        "description": "Action is used to send an email for the SOC user with report in the PDF format"
                      },
                      "_Generate_analysis_report_for_file_hash_in_PDF_format": {
                        "runAfter": {},
                        "type": "ApiConnection",
                        "inputs": {
                          "body": {
                            "apikey": "@variables('apikey')",
                            "format": "xml",
                            "hash": "@items('For_each_file_hash')?['Value']"
                          },
                          "headers": {
                            "Content-Type": "application/json"
                          },
                          "host": {
                            "connection": {
                              "name": "@parameters('$connections')['PaloaltoWFConnector']['connectionId']"
                            }
                          },
                          "method": "post",
                          "path": "/get/report"
                        },
                        "description": "Generate Report for the file hash in the PDF Format and send to SOC user"
                      },
                      "_Generate_analysis_report_for_file_hash_in_XML_format": {
                        "runAfter": {
                          "Send_an_email_for_the_file_hash": [
                            "Succeeded"
                          ]
                        },
                        "type": "ApiConnection",
                        "inputs": {
                          "body": {
                            "apikey": "@variables('apikey')",
                            "format": "xml",
                            "hash": "@items('For_each_file_hash')?['Value']"
                          },
                          "headers": {
                            "Content-Type": "application/json"
                          },
                          "host": {
                            "connection": {
                              "name": "@parameters('$connections')['PaloaltoWFConnector']['connectionId']"
                            }
                          },
                          "method": "post",
                          "path": "/get/report"
                        },
                        "description": "Generate Report for the file hash in the XML format to enrich incident"
                      }
                    }
                  },
                  "expression": {
                    "and": [
                      {
                        "equals": [
                          "@int(body('Parse_JSON_of_Verdict')?['verdict'])",
                          0
                        ]
                      }
                    ]
                  },
                  "type": "If"
                },
                "Create_Verdict_for_file_hash": {
                  "runAfter": {},
                  "type": "ApiConnection",
                  "inputs": {
                    "body": {
                      "apikey": "@variables('apikey')",
                      "hash": "@items('For_each_file_hash')?['Value']"
                    },
                    "headers": {
                      "Content-Type": "application/json"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['PaloaltoWFConnector']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/get/verdict"
                  },
                  "description": "Generate Verdict for file hash "
                },
                "Parse_JSON_of_verdict": {
                  "runAfter": {
                    "Transform_verdict_XML_to_JSON": [
                      "Succeeded"
                    ]
                  },
                  "type": "ParseJson",
                  "inputs": {
                    "content": "@body('Transform_verdict_XML_to_JSON')",
                    "schema": {
                      "properties": {
                        "get-verdict-info": {
                          "properties": {
                            "md5": {
                              "description": "md5 of the file hash",
                              "type": "string"
                            },
                            "sha256": {
                              "description": "Algorthim of the file hash",
                              "type": "string"
                            },
                            "verdict": {
                              "description": "Verdict code of the file hash",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "description": "Parse JSON of the verdict generated for the file hash "
                },
                "Transform_verdict_XML_to_JSON": {
                  "runAfter": {
                    "Create_Verdict_for_file_hash": [
                      "Succeeded"
                    ]
                  },
                  "type": "Liquid",
                  "kind": "XmlToJson",
                  "inputs": {
                    "content": "@{body('Create_Verdict_for_file_hash')}",
                    "integrationAccount": {
                      "map": {
                        "name": "Verdict"
                      }
                    }
                  },
                  "description": "Convert verdict XML into JSON format"
                }
              },
              "runAfter": {
                "Initialize_array_variable_final_comment": [
                  "Succeeded"
                ]
              },
              "type": "Foreach",
              "description": "For each file hash associated entities "
            },
            "Initialize_array_variable_final_comment": {
              "runAfter": {
                "Initialize_string_variable_for_the_incident_comment": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "finalconsoildatedcomments",
                    "type": "array"
                  }
                ]
              },
              "description": "Initialize array variable to append consolidated comments "
            },
            "Initialize_string_variable_for_the_incident_comment": {
              "runAfter": {
                "Initialize_string_variable_to_store_apikey": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "IncidentComment",
                    "type": "string"
                  }
                ]
              },
              "description": "Initialize string variable for the incident comment"
            },
            "Initialize_string_variable_to_store_apikey": {
              "runAfter": {
                "Entities_-_Get_FileHashes": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "apikey",
                    "type": "string",
                    "value": "[parameters('WildFireAPIkey')]"
                  }
                ]
              },
              "description": "Initialize string variable to store apikey because wildfire api's except apikey as a  parameter in the form of  data  "
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "PaloaltoWFConnector": {
                "id": "[resourceId('Microsoft.Web/customApis', 'PaloaltoWFConnector')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                "connectionName": "[variables('AzureSentinelConnectionName')]"
              },
              "azuresentinel": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'eastus', '/managedApis/', 'azuresentinel')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('WildfireConnectorConnectionName'))]",
                "connectionName": "[variables('WildfireConnectorConnectionName')]"
              },
              "office365": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'eastus', '/managedApis/', 'office365')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('OutlookConnectionName'))]",
                "connectionName": "[variables('OutlookConnectionName')]"
              }
            }
          }
        },
        "accessControl": {}
      },
      "name": "[parameters('Playbook_Name')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-06-01",
      "tags": {
        "displayName": "[parameters('Playbook_Name')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
        "[resourceId('Microsoft.Web/connections', variables('WildfireConnectorConnectionName'))]",
        "[resourceId('Microsoft.Web/connections', variables('OutlookConnectionName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('WildfireConnectorConnectionName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "customParameterValues": {},
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/customApis/PaloaltoWFConnector')]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('OutlookConnectionName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "customParameterValues": {},
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('AzureSentinelConnectionName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "customParameterValues": {},
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
        }
      }
    }
  ],
  "outputs": {}
}
